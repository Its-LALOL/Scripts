var _0x4567c7=_0x23cf,_0x1b0d3c=_0x13fd;(function(_0x56ffc1,_0x465ae2){var _0x2c4011=_0x13fd,_0x584c17=_0x23cf,_0x2529e6=_0x56ffc1();while(!![]){try{var _0x531bb2=parseInt(_0x584c17(0x101))/0x1*(parseInt(_0x2c4011(0xf8,'JwLn'))/0x2)+-parseInt(_0x2c4011(0xdd,'hMEz'))/0x3+-parseInt(_0x2c4011(0xf3,'nLdo'))/0x4*(-parseInt(_0x2c4011(0xec,'8Qje'))/0x5)+parseInt(_0x2c4011(0xe5,'Y&A&'))/0x6+-parseInt(_0x584c17(0xe1))/0x7+-parseInt(_0x584c17(0xfe))/0x8+parseInt(_0x2c4011(0xfc,'3v(L'))/0x9*(parseInt(_0x2c4011(0xde,'3arE'))/0xa);if(_0x531bb2===_0x465ae2)break;else _0x2529e6['push'](_0x2529e6['shift']());}catch(_0x99a711){_0x2529e6['push'](_0x2529e6['shift']());}}}(_0x4512,0xc372a));var _0x2d8ece=(function(){var _0x10958b=!![];return function(_0x2892b3,_0x1c925e){var _0x3671be=_0x10958b?function(){var _0x2597b5=_0x13fd;if(_0x1c925e){var _0x120769=_0x1c925e[_0x2597b5(0xf1,'JwLn')](_0x2892b3,arguments);return _0x1c925e=null,_0x120769;}}:function(){};return _0x10958b=![],_0x3671be;};}()),_0x4b1db0=_0x2d8ece(this,function(){var _0x99616e=_0x13fd,_0x275595=_0x23cf;return _0x4b1db0[_0x275595(0xe9)]()[_0x99616e(0xfd,'2T(6')](_0x275595(0xe3))['toString']()[_0x275595(0xe6)](_0x4b1db0)[_0x275595(0xef)](_0x275595(0xe3));});_0x4b1db0();var _0x2aabe8=(function(){var _0x5425c4=!![];return function(_0x5b85b1,_0x23fff2){var _0x4528e1=_0x5425c4?function(){var _0x385ce4=_0x13fd;if(_0x23fff2){var _0x45560c=_0x23fff2[_0x385ce4(0xda,'^8h!')](_0x5b85b1,arguments);return _0x23fff2=null,_0x45560c;}}:function(){};return _0x5425c4=![],_0x4528e1;};}()),_0xe3cc03=_0x2aabe8(this,function(){var _0x4e6ad5=_0x13fd,_0x79be0f=_0x23cf,_0xa9bde4;try{var _0x483aa1=Function('return\x20(function()\x20'+_0x79be0f(0xe4)+');');_0xa9bde4=_0x483aa1();}catch(_0x5aa74b){_0xa9bde4=window;}var _0x42716a=_0xa9bde4[_0x4e6ad5(0xea,'0T&8')]=_0xa9bde4[_0x79be0f(0xfb)]||{},_0x525ce2=[_0x79be0f(0xf4),'warn',_0x79be0f(0x105),'error',_0x4e6ad5(0xed,'MFl$'),'table',_0x79be0f(0xf0)];for(var _0xbcbda0=0x0;_0xbcbda0<_0x525ce2[_0x4e6ad5(0xdb,'!BsA')];_0xbcbda0++){var _0x356627=_0x2aabe8[_0x4e6ad5(0xe7,'XQ9j')][_0x79be0f(0xd9)]['bind'](_0x2aabe8),_0x2955a0=_0x525ce2[_0xbcbda0],_0x48b2fa=_0x42716a[_0x2955a0]||_0x356627;_0x356627[_0x4e6ad5(0xdc,'([v5')]=_0x2aabe8[_0x4e6ad5(0xf7,'Eee#')](_0x2aabe8),_0x356627[_0x79be0f(0xe9)]=_0x48b2fa[_0x79be0f(0xe9)][_0x79be0f(0xe8)](_0x48b2fa),_0x42716a[_0x2955a0]=_0x356627;}});function _0x23cf(_0x276fce,_0x282f47){var _0x55f29d=_0x4512();return _0x23cf=function(_0xe3cc03,_0x2aabe8){_0xe3cc03=_0xe3cc03-0xd9;var _0x263399=_0x55f29d[_0xe3cc03];if(_0x23cf['TWHXqK']===undefined){var _0x5535ea=function(_0x23cfe1){var _0x4c1aa8='abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789+/=';var _0x344531='',_0x363eec='',_0x2638c1=_0x344531+_0x5535ea;for(var _0x230351=0x0,_0xf622cf,_0x13fd60,_0x179949=0x0;_0x13fd60=_0x23cfe1['charAt'](_0x179949++);~_0x13fd60&&(_0xf622cf=_0x230351%0x4?_0xf622cf*0x40+_0x13fd60:_0x13fd60,_0x230351++%0x4)?_0x344531+=_0x2638c1['charCodeAt'](_0x179949+0xa)-0xa!==0x0?String['fromCharCode'](0xff&_0xf622cf>>(-0x2*_0x230351&0x6)):_0x230351:0x0){_0x13fd60=_0x4c1aa8['indexOf'](_0x13fd60);}for(var _0x51e56b=0x0,_0x19ed10=_0x344531['length'];_0x51e56b<_0x19ed10;_0x51e56b++){_0x363eec+='%'+('00'+_0x344531['charCodeAt'](_0x51e56b)['toString'](0x10))['slice'](-0x2);}return decodeURIComponent(_0x363eec);};_0x23cf['jFYvlU']=_0x5535ea,_0x276fce=arguments,_0x23cf['TWHXqK']=!![];}var _0x4b1db0=_0x55f29d[0x0],_0x2d8ece=_0xe3cc03+_0x4b1db0,_0x4512e3=_0x276fce[_0x2d8ece];if(!_0x4512e3){var _0x17b105=function(_0xca5910){this['XDmIzz']=_0xca5910,this['PmSGdR']=[0x1,0x0,0x0],this['nXJktR']=function(){return'newState';},this['qioHQx']='\x5cw+\x20*\x5c(\x5c)\x20*{\x5cw+\x20*',this['OYuMWv']='[\x27|\x22].+[\x27|\x22];?\x20*}';};_0x17b105['prototype']['bagFne']=function(){var _0x2775fd=new RegExp(this['qioHQx']+this['OYuMWv']),_0x10958b=_0x2775fd['test'](this['nXJktR']['toString']())?--this['PmSGdR'][0x1]:--this['PmSGdR'][0x0];return this['pRFFhh'](_0x10958b);},_0x17b105['prototype']['pRFFhh']=function(_0x2892b3){if(!Boolean(~_0x2892b3))return _0x2892b3;return this['VVCxkO'](this['XDmIzz']);},_0x17b105['prototype']['VVCxkO']=function(_0x1c925e){for(var _0x3671be=0x0,_0x120769=this['PmSGdR']['length'];_0x3671be<_0x120769;_0x3671be++){this['PmSGdR']['push'](Math['round'](Math['random']())),_0x120769=this['PmSGdR']['length'];}return _0x1c925e(this['PmSGdR'][0x0]);},new _0x17b105(_0x23cf)['bagFne'](),_0x263399=_0x23cf['jFYvlU'](_0x263399),_0x276fce[_0x2d8ece]=_0x263399;}else _0x263399=_0x4512e3;return _0x263399;},_0x23cf(_0x276fce,_0x282f47);}_0xe3cc03();function setScore(){var _0x2804d0=_0x23cf,_0x4befbe=_0x13fd,_0x3bd185=prompt(_0x4befbe(0x102,'U[$z'));localStorage['setItem'](_0x2804d0(0xff),_0x3bd185);}function _0x13fd(_0x276fce,_0x282f47){var _0x55f29d=_0x4512();return _0x13fd=function(_0xe3cc03,_0x2aabe8){_0xe3cc03=_0xe3cc03-0xd9;var _0x263399=_0x55f29d[_0xe3cc03];if(_0x13fd['VxnBpF']===undefined){var _0x5535ea=function(_0x4c1aa8){var _0x344531='abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789+/=';var _0x363eec='',_0x2638c1='',_0x230351=_0x363eec+_0x5535ea;for(var _0xf622cf=0x0,_0x13fd60,_0x179949,_0x51e56b=0x0;_0x179949=_0x4c1aa8['charAt'](_0x51e56b++);~_0x179949&&(_0x13fd60=_0xf622cf%0x4?_0x13fd60*0x40+_0x179949:_0x179949,_0xf622cf++%0x4)?_0x363eec+=_0x230351['charCodeAt'](_0x51e56b+0xa)-0xa!==0x0?String['fromCharCode'](0xff&_0x13fd60>>(-0x2*_0xf622cf&0x6)):_0xf622cf:0x0){_0x179949=_0x344531['indexOf'](_0x179949);}for(var _0x19ed10=0x0,_0x17b105=_0x363eec['length'];_0x19ed10<_0x17b105;_0x19ed10++){_0x2638c1+='%'+('00'+_0x363eec['charCodeAt'](_0x19ed10)['toString'](0x10))['slice'](-0x2);}return decodeURIComponent(_0x2638c1);};var _0x23cfe1=function(_0xca5910,_0x2775fd){var _0x10958b=[],_0x2892b3=0x0,_0x1c925e,_0x3671be='';_0xca5910=_0x5535ea(_0xca5910);var _0x120769;for(_0x120769=0x0;_0x120769<0x100;_0x120769++){_0x10958b[_0x120769]=_0x120769;}for(_0x120769=0x0;_0x120769<0x100;_0x120769++){_0x2892b3=(_0x2892b3+_0x10958b[_0x120769]+_0x2775fd['charCodeAt'](_0x120769%_0x2775fd['length']))%0x100,_0x1c925e=_0x10958b[_0x120769],_0x10958b[_0x120769]=_0x10958b[_0x2892b3],_0x10958b[_0x2892b3]=_0x1c925e;}_0x120769=0x0,_0x2892b3=0x0;for(var _0x5425c4=0x0;_0x5425c4<_0xca5910['length'];_0x5425c4++){_0x120769=(_0x120769+0x1)%0x100,_0x2892b3=(_0x2892b3+_0x10958b[_0x120769])%0x100,_0x1c925e=_0x10958b[_0x120769],_0x10958b[_0x120769]=_0x10958b[_0x2892b3],_0x10958b[_0x2892b3]=_0x1c925e,_0x3671be+=String['fromCharCode'](_0xca5910['charCodeAt'](_0x5425c4)^_0x10958b[(_0x10958b[_0x120769]+_0x10958b[_0x2892b3])%0x100]);}return _0x3671be;};_0x13fd['GMLrtk']=_0x23cfe1,_0x276fce=arguments,_0x13fd['VxnBpF']=!![];}var _0x4b1db0=_0x55f29d[0x0],_0x2d8ece=_0xe3cc03+_0x4b1db0,_0x4512e3=_0x276fce[_0x2d8ece];if(!_0x4512e3){if(_0x13fd['DehzvU']===undefined){var _0x5b85b1=function(_0x23fff2){this['AazHSp']=_0x23fff2,this['WFKUMt']=[0x1,0x0,0x0],this['BhxDiX']=function(){return'newState';},this['nnwoMW']='\x5cw+\x20*\x5c(\x5c)\x20*{\x5cw+\x20*',this['MdMlSp']='[\x27|\x22].+[\x27|\x22];?\x20*}';};_0x5b85b1['prototype']['SYqkxB']=function(){var _0x4528e1=new RegExp(this['nnwoMW']+this['MdMlSp']),_0x45560c=_0x4528e1['test'](this['BhxDiX']['toString']())?--this['WFKUMt'][0x1]:--this['WFKUMt'][0x0];return this['jPoShP'](_0x45560c);},_0x5b85b1['prototype']['jPoShP']=function(_0xa9bde4){if(!Boolean(~_0xa9bde4))return _0xa9bde4;return this['jXOrRE'](this['AazHSp']);},_0x5b85b1['prototype']['jXOrRE']=function(_0x483aa1){for(var _0x42716a=0x0,_0x525ce2=this['WFKUMt']['length'];_0x42716a<_0x525ce2;_0x42716a++){this['WFKUMt']['push'](Math['round'](Math['random']())),_0x525ce2=this['WFKUMt']['length'];}return _0x483aa1(this['WFKUMt'][0x0]);},new _0x5b85b1(_0x13fd)['SYqkxB'](),_0x13fd['DehzvU']=!![];}_0x263399=_0x13fd['GMLrtk'](_0x263399,_0x2aabe8),_0x276fce[_0x2d8ece]=_0x263399;}else _0x263399=_0x4512e3;return _0x263399;},_0x13fd(_0x276fce,_0x282f47);}function _0x4512(){var _0x111fd1=['uqJcLCkJWRW','q3jLyxrLzcbcEsbmquXpta','W53cMCkiWP4XW6FcNq','Bg9N','WPldI2WOW77dSebQyeTK','yNv0Dg9U','FshcTXe','au3dLCo9W7uYWOHwgZ3cPG','WPhcO8kTlCkWW4xdMK3cTq','yM9KEq','y29UC29Szq','W5xdGbBcRqDaW6qx','WOldOWC0W5zY','mta3mJe1mdr0CefhvgC','AgLNAgvZDf9Zy29Yzq','WRvlW6dcVmoRhvNdGYHiW5GRDa','mtyXrgvnDKTP','WP9xASo0WPejkmkwl8kcCG','mtiYnJCYnuXvAfPADq','A2pcNL7cHSk0WQCj','Aw5MBW','ChjVDg90ExbL','chPYvXy','W4JcHNSwWRGe','WO7dP8kZW7mpumkCB0q','gCkHWQWiWRNcV3tcNmoIW57dLamV','WQRcLwaeWRSwW6tdSKHAoZhdGq','AwxdNcpdVCoYW6nNW7rQW6NcISoFW60','WRFdILaaWR0SW6umnLTvcCks','mtaYodG1mZbbEefUuwC','WPjrWRJdNeWrm1S7W4JdIqVdKq','kcGOlISPkYKRksSK','E30Uy29UC3rYDwn0B3iOiNjLDhvYBIb0AgLZiIKOicK','W4BcIY99WQlcPMrlrMfUWPS','y29UC3rYDwn0B3i','WPy9AL0WA0ddTCoMkCkH','yMLUza','Dg9tDhjPBMC','yfCap1mSW4u','u8kew8kqWQu/WQVdU8kk','udP4WQZdJXNcQSoglCkZe3qw','WQFcVSk6AmktW5ldNfdcVG','jxpdLSk7W5RcHSkaW57dMLafWQTcW4m','C2vHCMnO','DhjHy2u'];_0x4512=function(){return _0x111fd1;};return _0x4512();}var btn=document[_0x1b0d3c(0xe2,'@R[3')](_0x4567c7(0xf6));btn[_0x1b0d3c(0xf5,'Y&A&')](document['createTextNode'](_0x1b0d3c(0xf9,'MFl$'))),btn['onclick']=setScore,document[_0x4567c7(0xfa)]['appendChild'](btn),alert(_0x4567c7(0xf2));
