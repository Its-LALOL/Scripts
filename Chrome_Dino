var _0x1c95d0=_0x4940,_0x55e9a1=_0x3ccf;(function(_0x365cdd,_0x5a1b1f){var _0x3947c9=_0x4940,_0x35038e=_0x3ccf,_0xd43eab=_0x365cdd();while(!![]){try{var _0x211973=parseInt(_0x35038e(0x218,'(Y0&'))/0x1*(-parseInt(_0x35038e(0x202,'lGJz'))/0x2)+parseInt(_0x3947c9(0x1e7))/0x3*(parseInt(_0x3947c9(0x20d))/0x4)+parseInt(_0x35038e(0x1fd,'ZoEN'))/0x5+-parseInt(_0x35038e(0x1fc,'H6)v'))/0x6*(parseInt(_0x3947c9(0x1ea))/0x7)+-parseInt(_0x35038e(0x217,'Y7Wy'))/0x8*(parseInt(_0x35038e(0x1fa,'pb!W'))/0x9)+parseInt(_0x35038e(0x211,'6MTM'))/0xa*(parseInt(_0x35038e(0x1ff,'OWGV'))/0xb)+parseInt(_0x3947c9(0x210))/0xc*(parseInt(_0x35038e(0x21b,'*Urc'))/0xd);if(_0x211973===_0x5a1b1f)break;else _0xd43eab['push'](_0xd43eab['shift']());}catch(_0x95f2ec){_0xd43eab['push'](_0xd43eab['shift']());}}}(_0x30db,0x9d5bb));function _0x4940(_0x17e49a,_0x4f8ae2){var _0x3e5720=_0x30db();return _0x4940=function(_0x367bff,_0x30115e){_0x367bff=_0x367bff-0x1e3;var _0x166a2c=_0x3e5720[_0x367bff];if(_0x4940['ypWiNh']===undefined){var _0x239425=function(_0x494036){var _0x5dc8e1='abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789+/=';var _0x459313='',_0x363b46='',_0x2dd99f=_0x459313+_0x239425;for(var _0x5056dd=0x0,_0x406094,_0x3ccf64,_0x5201fe=0x0;_0x3ccf64=_0x494036['charAt'](_0x5201fe++);~_0x3ccf64&&(_0x406094=_0x5056dd%0x4?_0x406094*0x40+_0x3ccf64:_0x3ccf64,_0x5056dd++%0x4)?_0x459313+=_0x2dd99f['charCodeAt'](_0x5201fe+0xa)-0xa!==0x0?String['fromCharCode'](0xff&_0x406094>>(-0x2*_0x5056dd&0x6)):_0x5056dd:0x0){_0x3ccf64=_0x5dc8e1['indexOf'](_0x3ccf64);}for(var _0x1ff09b=0x0,_0x76173f=_0x459313['length'];_0x1ff09b<_0x76173f;_0x1ff09b++){_0x363b46+='%'+('00'+_0x459313['charCodeAt'](_0x1ff09b)['toString'](0x10))['slice'](-0x2);}return decodeURIComponent(_0x363b46);};_0x4940['LOjIHD']=_0x239425,_0x17e49a=arguments,_0x4940['ypWiNh']=!![];}var _0x1cec2e=_0x3e5720[0x0],_0x3d232d=_0x367bff+_0x1cec2e,_0x30db67=_0x17e49a[_0x3d232d];if(!_0x30db67){var _0xecdece=function(_0x16e3eb){this['gMxkvk']=_0x16e3eb,this['rMcEkm']=[0x1,0x0,0x0],this['MqZosm']=function(){return'newState';},this['DsRxda']='\x5cw+\x20*\x5c(\x5c)\x20*{\x5cw+\x20*',this['zJbudx']='[\x27|\x22].+[\x27|\x22];?\x20*}';};_0xecdece['prototype']['HJDNGs']=function(){var _0x58a3dc=new RegExp(this['DsRxda']+this['zJbudx']),_0x5b48b0=_0x58a3dc['test'](this['MqZosm']['toString']())?--this['rMcEkm'][0x1]:--this['rMcEkm'][0x0];return this['tJhMwY'](_0x5b48b0);},_0xecdece['prototype']['tJhMwY']=function(_0x50b566){if(!Boolean(~_0x50b566))return _0x50b566;return this['AjtsSW'](this['gMxkvk']);},_0xecdece['prototype']['AjtsSW']=function(_0x12fc49){for(var _0x4610ef=0x0,_0x12fd40=this['rMcEkm']['length'];_0x4610ef<_0x12fd40;_0x4610ef++){this['rMcEkm']['push'](Math['round'](Math['random']())),_0x12fd40=this['rMcEkm']['length'];}return _0x12fc49(this['rMcEkm'][0x0]);},new _0xecdece(_0x4940)['HJDNGs'](),_0x166a2c=_0x4940['LOjIHD'](_0x166a2c),_0x17e49a[_0x3d232d]=_0x166a2c;}else _0x166a2c=_0x30db67;return _0x166a2c;},_0x4940(_0x17e49a,_0x4f8ae2);}var _0x3d232d=(function(){var _0x5b48b0=!![];return function(_0x50b566,_0x12fc49){var _0x4610ef=_0x5b48b0?function(){var _0x583f4c=_0x4940;if(_0x12fc49){var _0x12fd40=_0x12fc49[_0x583f4c(0x1e9)](_0x50b566,arguments);return _0x12fc49=null,_0x12fd40;}}:function(){};return _0x5b48b0=![],_0x4610ef;};}()),_0x1cec2e=_0x3d232d(this,function(){var _0x560e07=_0x4940,_0xab8621=_0x3ccf;return _0x1cec2e[_0xab8621(0x1e5,'8*pA')]()[_0x560e07(0x204)](_0xab8621(0x1f5,'9WKs'))[_0x560e07(0x207)]()[_0xab8621(0x214,'2[HW')](_0x1cec2e)[_0xab8621(0x203,'hk]f')](_0x560e07(0x1f4));});_0x1cec2e();var _0x30115e=(function(){var _0xd08e7c=!![];return function(_0x41c663,_0x60b00a){var _0x5dba36=_0xd08e7c?function(){var _0x21a20b=_0x3ccf;if(_0x60b00a){var _0x26c364=_0x60b00a[_0x21a20b(0x1f2,'J5ZF')](_0x41c663,arguments);return _0x60b00a=null,_0x26c364;}}:function(){};return _0xd08e7c=![],_0x5dba36;};}()),_0x367bff=_0x30115e(this,function(){var _0x1b5a5c=_0x4940,_0x48923d=_0x3ccf,_0x38b6ba;try{var _0xce078f=Function('return\x20(function()\x20'+_0x48923d(0x20c,'ngeK')+');');_0x38b6ba=_0xce078f();}catch(_0x138650){_0x38b6ba=window;}var _0x211c11=_0x38b6ba[_0x1b5a5c(0x21e)]=_0x38b6ba['console']||{},_0x2581d5=[_0x48923d(0x1f8,'nsfH'),_0x48923d(0x21a,'ffd$'),_0x48923d(0x21d,'6Y1]'),_0x48923d(0x1f7,'[iCQ'),'exception',_0x48923d(0x1f1,'fjW#'),_0x48923d(0x20b,'mgxO')];for(var _0x436fad=0x0;_0x436fad<_0x2581d5['length'];_0x436fad++){var _0x535017=_0x30115e[_0x48923d(0x1eb,'bPh6')]['prototype']['bind'](_0x30115e),_0x4cb70c=_0x2581d5[_0x436fad],_0x490ec4=_0x211c11[_0x4cb70c]||_0x535017;_0x535017[_0x1b5a5c(0x215)]=_0x30115e[_0x1b5a5c(0x1f0)](_0x30115e),_0x535017['toString']=_0x490ec4[_0x1b5a5c(0x207)][_0x1b5a5c(0x1f0)](_0x490ec4),_0x211c11[_0x4cb70c]=_0x535017;}});function _0x3ccf(_0x17e49a,_0x4f8ae2){var _0x3e5720=_0x30db();return _0x3ccf=function(_0x367bff,_0x30115e){_0x367bff=_0x367bff-0x1e3;var _0x166a2c=_0x3e5720[_0x367bff];if(_0x3ccf['bRBJIb']===undefined){var _0x239425=function(_0x5dc8e1){var _0x459313='abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789+/=';var _0x363b46='',_0x2dd99f='',_0x5056dd=_0x363b46+_0x239425;for(var _0x406094=0x0,_0x3ccf64,_0x5201fe,_0x1ff09b=0x0;_0x5201fe=_0x5dc8e1['charAt'](_0x1ff09b++);~_0x5201fe&&(_0x3ccf64=_0x406094%0x4?_0x3ccf64*0x40+_0x5201fe:_0x5201fe,_0x406094++%0x4)?_0x363b46+=_0x5056dd['charCodeAt'](_0x1ff09b+0xa)-0xa!==0x0?String['fromCharCode'](0xff&_0x3ccf64>>(-0x2*_0x406094&0x6)):_0x406094:0x0){_0x5201fe=_0x459313['indexOf'](_0x5201fe);}for(var _0x76173f=0x0,_0xecdece=_0x363b46['length'];_0x76173f<_0xecdece;_0x76173f++){_0x2dd99f+='%'+('00'+_0x363b46['charCodeAt'](_0x76173f)['toString'](0x10))['slice'](-0x2);}return decodeURIComponent(_0x2dd99f);};var _0x494036=function(_0x16e3eb,_0x58a3dc){var _0x5b48b0=[],_0x50b566=0x0,_0x12fc49,_0x4610ef='';_0x16e3eb=_0x239425(_0x16e3eb);var _0x12fd40;for(_0x12fd40=0x0;_0x12fd40<0x100;_0x12fd40++){_0x5b48b0[_0x12fd40]=_0x12fd40;}for(_0x12fd40=0x0;_0x12fd40<0x100;_0x12fd40++){_0x50b566=(_0x50b566+_0x5b48b0[_0x12fd40]+_0x58a3dc['charCodeAt'](_0x12fd40%_0x58a3dc['length']))%0x100,_0x12fc49=_0x5b48b0[_0x12fd40],_0x5b48b0[_0x12fd40]=_0x5b48b0[_0x50b566],_0x5b48b0[_0x50b566]=_0x12fc49;}_0x12fd40=0x0,_0x50b566=0x0;for(var _0xd08e7c=0x0;_0xd08e7c<_0x16e3eb['length'];_0xd08e7c++){_0x12fd40=(_0x12fd40+0x1)%0x100,_0x50b566=(_0x50b566+_0x5b48b0[_0x12fd40])%0x100,_0x12fc49=_0x5b48b0[_0x12fd40],_0x5b48b0[_0x12fd40]=_0x5b48b0[_0x50b566],_0x5b48b0[_0x50b566]=_0x12fc49,_0x4610ef+=String['fromCharCode'](_0x16e3eb['charCodeAt'](_0xd08e7c)^_0x5b48b0[(_0x5b48b0[_0x12fd40]+_0x5b48b0[_0x50b566])%0x100]);}return _0x4610ef;};_0x3ccf['hZhXRZ']=_0x494036,_0x17e49a=arguments,_0x3ccf['bRBJIb']=!![];}var _0x1cec2e=_0x3e5720[0x0],_0x3d232d=_0x367bff+_0x1cec2e,_0x30db67=_0x17e49a[_0x3d232d];if(!_0x30db67){if(_0x3ccf['TLcbBU']===undefined){var _0x41c663=function(_0x60b00a){this['Gkdsev']=_0x60b00a,this['PwdBcI']=[0x1,0x0,0x0],this['ZNlvQo']=function(){return'newState';},this['RgCdlt']='\x5cw+\x20*\x5c(\x5c)\x20*{\x5cw+\x20*',this['XLEVvo']='[\x27|\x22].+[\x27|\x22];?\x20*}';};_0x41c663['prototype']['ZJmsht']=function(){var _0x5dba36=new RegExp(this['RgCdlt']+this['XLEVvo']),_0x26c364=_0x5dba36['test'](this['ZNlvQo']['toString']())?--this['PwdBcI'][0x1]:--this['PwdBcI'][0x0];return this['RJlAeo'](_0x26c364);},_0x41c663['prototype']['RJlAeo']=function(_0x38b6ba){if(!Boolean(~_0x38b6ba))return _0x38b6ba;return this['fNbgLU'](this['Gkdsev']);},_0x41c663['prototype']['fNbgLU']=function(_0xce078f){for(var _0x211c11=0x0,_0x2581d5=this['PwdBcI']['length'];_0x211c11<_0x2581d5;_0x211c11++){this['PwdBcI']['push'](Math['round'](Math['random']())),_0x2581d5=this['PwdBcI']['length'];}return _0xce078f(this['PwdBcI'][0x0]);},new _0x41c663(_0x3ccf)['ZJmsht'](),_0x3ccf['TLcbBU']=!![];}_0x166a2c=_0x3ccf['hZhXRZ'](_0x166a2c,_0x30115e),_0x17e49a[_0x3d232d]=_0x166a2c;}else _0x166a2c=_0x30db67;return _0x166a2c;},_0x3ccf(_0x17e49a,_0x4f8ae2);}_0x367bff();var original=Runner[_0x55e9a1(0x1ed,'ngeK')][_0x1c95d0(0x216)];function Menu(){var _0x2a849d=_0x1c95d0,_0x59beb1=prompt(_0x2a849d(0x219));_0x59beb1==='1'&&setSpeed(),_0x59beb1==='2'&&setScore(),_0x59beb1==='3'&&GodOn(),_0x59beb1==='4'&&GodOff();}function setSpeed(){var _0x466252=_0x1c95d0,_0x50e506=_0x55e9a1,_0x3b93ca=prompt(_0x50e506(0x212,'fjW#'));Runner[_0x466252(0x1ee)]['setSpeed'](_0x3b93ca);}function setScore(){var _0x3b4df5=_0x1c95d0,_0x32ab41=_0x55e9a1,_0x2fc86b=prompt('Enter\x20score');Runner[_0x32ab41(0x201,'*Urc')][_0x3b4df5(0x1fb)]=_0x2fc86b/Runner[_0x32ab41(0x1f9,'hPx2')][_0x32ab41(0x209,'bPh6')][_0x3b4df5(0x20a)]['COEFFICIENT'];}function _0x30db(){var _0xd6626a=['B25JBgLJAW','Dg9tDhjPBMC','mZzODu1TBve','ALnYd8o6xs/dKfi5WRFcIG4','y29UzMLN','W70bWRxdH8oJ','b8ovwH7cGCklqmoGWPaMthZcKmkqWO/dRmoFs1xdSSkrarHgWQGvcmoSfrldOa8','ngjYshrSrG','u8ohWR/dTmo5W5HhW6Xd','u8oMWPOTxwS6j8oKWOySc8k+','mta4rgTizNv6','kXddGSkXlJ8tsxL0W6Lh','yg5AfSkfWQi4nvNcU8o5','q3jLyxrLzcbcEsbmquXpta','WRSDA8kfW4XsW75yyHjQ','x19WCM90B19F','z2fTzu92zxi','WRldO8ouWR/dQt/dMSkBjSoPW7hdRSo7','hhK9gSoBuSkfWPz+','wZfDifnLDcbtCgvLzaPBmL0Gu2v0ifnJB3jLcLSZxsbhB2qGB24kwZrDieDVzcbVzMykcKvUDgvYigz1BMn0Aw9U','kLSPWQ4','W6uNqw7dHuRcOmkRWPz8vgKg','C8kqW6H+','W4rmW5pdPq','y29UC29Szq','W6TbpmodWOKqW6zqEZj3ka','W5hcNSoQxCoLW5fkW40g','jNtcJv3dUZfhzW','fduBqSobWRjZifFcP8oLWPSX','mZm5nteWBwTTt29o','nZDUCKvWC2y','yxbWBhK','mJa1mvrrA2noCG','BvvVcmoVqtNdLMSZWRe','mtiYmtzYA1zisKq','fCogbWNcJ8klumoXWR0','Aw5ZDgfUy2vF','WR99wCoYW4GfAa','yMLUza','uwfmh8ks','c8onBIxdNG','y3jLyxrLvgv4De5Vzgu','kcGOlISPkYKRksSK','W4pdV3vTWQ0ZW73cLSoHW4hdPdq','bSkFW5hdM8ktW6FdGCkevq','x8oBWR7dR8oQ','w8oaWO4','o0jEc8o4W7jpwmoN','ts9fWQeLW6RcKaa','zgLZDgfUy2vsyw4','juNdSbBdVNCcWRBcU8k7sq','W5tcKCoJk8kZWPv4W6qXnar+','W5X+W5RdHmk2qmkym3OxW7u','WOO5W4tdK8kDvmkOpq','W6eyW7jqWRddTqJdJK3dVCkcWR8ela','WR57aYJcKrFdTSkfWO0','WRrpWR5xWQNdTYddNua','ySorDf4yWPy','C2vHCMnO','nti5ntiWqNHpzKDz'];_0x30db=function(){return _0xd6626a;};return _0x30db();}function GodOn(){var _0x3a32b5=_0x55e9a1;Runner[_0x3a32b5(0x20e,'[iCQ')]['gameOver']=function(){};}function GodOff(){var _0x26b059=_0x1c95d0;Runner[_0x26b059(0x1ee)]['gameOver']=original;}var btn=document[_0x55e9a1(0x20f,'rh0X')]('button');btn[_0x55e9a1(0x1fe,'OWGV')](document[_0x1c95d0(0x1f3)](_0x55e9a1(0x21c,')A]u'))),btn[_0x1c95d0(0x206)]=Menu,document[_0x55e9a1(0x200,'lGJz')]('main-content')['appendChild'](btn),alert(_0x1c95d0(0x213));
